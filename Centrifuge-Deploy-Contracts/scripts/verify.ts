// scripts/verify.ts
import { run } from 'hardhat';
import fs from 'fs';
import path from 'path';

async function verifyContract() {
  console.log('üîç VERIFYING CONTRACT ON ETHERSCAN\n');
  console.log('‚ïê'.repeat(50));

  try {
    // Load deployment info
    const deploymentFile = path.join(__dirname, '..', 'deployments', 'sepolia-deployment.json');
    
    if (!fs.existsSync(deploymentFile)) {
      throw new Error('‚ùå Deployment file not found! Deploy the contract first.');
    }

    const deploymentInfo = JSON.parse(fs.readFileSync(deploymentFile, 'utf8'));
    const contractAddress = deploymentInfo.contractAddress;

    console.log(`üìç Contract Address: ${contractAddress}`);
    console.log('‚è≥ Starting verification...\n');

    // Verify the contract
    await run("verify:verify", {
      address: contractAddress,
      constructorArguments: [], // PropertyNFT constructor has no arguments
      contract: "contracts/PropertyNFT.sol:PropertyNFT"
    });

    console.log('‚úÖ Contract verification completed!');
    console.log(`üîó View on Etherscan: https://sepolia.etherscan.io/address/${contractAddress}`);

  } catch (error: any) {
    if (error.message.includes('Already Verified')) {
      console.log('‚úÖ Contract is already verified on Etherscan!');
    } else {
      console.error('‚ùå Verification failed:', error.message);
      console.log('\nüí° Troubleshooting:');
      console.log('   ‚Ä¢ Check if ETHERSCAN_API_KEY is set in .env');
      console.log('   ‚Ä¢ Ensure contract was deployed successfully');
      console.log('   ‚Ä¢ Wait a few minutes after deployment before verifying');
      console.log('   ‚Ä¢ Check if constructor arguments are correct');
    }
  }
}

verifyContract();