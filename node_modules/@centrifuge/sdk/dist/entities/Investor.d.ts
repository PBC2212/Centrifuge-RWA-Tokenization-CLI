import type { HexString } from '../types/index.js';
import { AssetId, PoolId, ShareClassId } from '../utils/types.js';
import { Entity } from './Entity.js';
export declare class Investor extends Entity {
    address: HexString;
    portfolio(chainId?: number): import("../index.js").Query<{
        balance: import("../index.js").Balance;
        currency: import("../types/index.js").CurrencyDetails;
    }[]>;
    investment(poolId: PoolId, scId: ShareClassId, asset: HexString | AssetId, chainId: number): import("../index.js").Query<{
        shareBalance: import("../index.js").Balance;
        investmentCurrencyBalance: import("../index.js").Balance;
        investmentCurrencyAllowance: import("../index.js").Balance;
        isAllowedToInvest: boolean;
        isAllowedToRedeem: boolean;
        isSyncInvest: boolean;
        maxInvest: import("../index.js").Balance;
        claimableInvestShares: import("../index.js").Balance;
        claimableInvestCurrencyEquivalent: import("../index.js").Balance;
        claimableRedeemCurrency: import("../index.js").Balance;
        claimableRedeemSharesEquivalent: import("../index.js").Balance;
        pendingInvestCurrency: import("../index.js").Balance;
        pendingRedeemShares: import("../index.js").Balance;
        claimableCancelInvestCurrency: import("../index.js").Balance;
        claimableCancelRedeemShares: import("../index.js").Balance;
        hasPendingCancelInvestRequest: boolean;
        hasPendingCancelRedeemRequest: boolean;
        investmentCurrency: import("../types/index.js").CurrencyDetails;
        shareCurrency: import("../types/index.js").CurrencyDetails;
    }>;
    isMember(scId: ShareClassId, chainId: number): import("../index.js").Query<boolean>;
}
//# sourceMappingURL=Investor.d.ts.map