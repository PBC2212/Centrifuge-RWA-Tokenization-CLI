import { Balance, Rate } from '../../utils/BigInt.js';
export type AssetSnapshotFilter = Partial<Record<keyof SubqueryAssetSnapshots['assetSnapshots']['nodes'][0], any>>;
export type AssetSnapshot = {
    actualMaturityDate: string | undefined;
    actualOriginationDate: number | undefined;
    advanceRate: Rate | undefined;
    assetId: string;
    collateralValue: Balance | undefined;
    currentPrice: Balance;
    discountRate: Rate | undefined;
    faceValue: Balance | undefined;
    lossGivenDefault: Rate | undefined;
    name: string;
    outstandingDebt: Balance | undefined;
    outstandingInterest: Balance | undefined;
    outstandingPrincipal: Balance | undefined;
    outstandingQuantity: Balance | undefined;
    presentValue: Balance | undefined;
    probabilityOfDefault: Rate | undefined;
    status: string;
    sumRealizedProfitFifo: Balance | undefined;
    timestamp: string;
    totalRepaidInterest: Balance | undefined;
    totalRepaidPrincipal: Balance | undefined;
    totalRepaidUnscheduled: Balance | undefined;
    unrealizedProfitAtMarketPrice: Balance | undefined;
    valuationMethod: string | undefined;
};
export type SubqueryAssetSnapshots = {
    assetSnapshots: {
        nodes: {
            asset: {
                pool: {
                    currency: {
                        decimals: number;
                    };
                };
                actualOriginationDate: number;
                advanceRate: string | undefined;
                collateralValue: string | undefined;
                discountRate: string | undefined;
                id: string;
                lossGivenDefault: string | undefined;
                actualMaturityDate: string | undefined;
                name: string;
                probabilityOfDefault: string | undefined;
                status: string;
                sumRealizedProfitFifo: string | undefined;
                unrealizedProfitAtMarketPrice: string | undefined;
                valuationMethod: string;
                notional: string | undefined;
            };
            timestamp: string;
            assetId: string;
            presentValue: string | undefined;
            currentPrice: string | undefined;
            outstandingPrincipal: string | undefined;
            outstandingInterest: string | undefined;
            outstandingDebt: string | undefined;
            outstandingQuantity: string | undefined;
            totalRepaidPrincipal: string | undefined;
            totalRepaidInterest: string | undefined;
            totalRepaidUnscheduled: string | undefined;
        }[];
    };
};
export declare const assetSnapshotsPostProcess: (data: SubqueryAssetSnapshots) => AssetSnapshot[];
export declare const assetSnapshotsQuery = "\nquery($filter: AssetSnapshotFilter) {\n        assetSnapshots(\n          first: 1000,\n          orderBy: TIMESTAMP_ASC,\n          filter: $filter\n        ) {\n          nodes {\n            assetId\n            timestamp\n            totalRepaidUnscheduled\n            outstandingInterest\n            totalRepaidInterest\n            currentPrice\n            outstandingPrincipal\n            totalRepaidPrincipal\n            outstandingQuantity\n            presentValue\n            outstandingDebt\n            asset {\n               pool {\n                currency {\n                  decimals\n                }\n              }\n              actualMaturityDate\n              actualOriginationDate\n              advanceRate\n              collateralValue\n              discountRate\n              lossGivenDefault\n              name\n              notional\n              probabilityOfDefault\n              status\n              sumRealizedProfitFifo\n              unrealizedProfitAtMarketPrice\n              valuationMethod\n            }\n          }\n        }\n      }\n";
//# sourceMappingURL=assetSnapshots.d.ts.map