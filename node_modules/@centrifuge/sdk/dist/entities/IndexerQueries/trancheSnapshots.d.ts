import { Balance, Perquintill, Price } from '../../utils/BigInt.js';
export type TrancheSnapshotFilter = Partial<Record<keyof SubqueryTrancheSnapshot['trancheSnapshots']['nodes'][0], any>>;
export declare const trancheSnapshotsQuery = "\nquery($filter: TrancheSnapshotFilter) {\n  trancheSnapshots(\n    orderBy: BLOCK_NUMBER_ASC,\n    filter: $filter\n) {\n    nodes {\n      tranche {\n        poolId\n        trancheId\n        pool {\n          currency {\n            decimals\n            symbol\n          }\n        }\n      }\n      timestamp\n      tokenSupply\n      tokenPrice\n      sumOutstandingInvestOrdersByPeriod\n      sumOutstandingRedeemOrdersByPeriod\n      sumFulfilledInvestOrdersByPeriod\n      sumFulfilledRedeemOrdersByPeriod\n      yield7DaysAnnualized\n      yield30DaysAnnualized\n      yield90DaysAnnualized\n      yieldSinceInception\n      yieldMTD\n      yieldQTD\n      yieldYTD\n      yieldSinceLastPeriod\n    }\n  }\n}\n";
export type SubqueryTrancheSnapshot = {
    trancheSnapshots: {
        nodes: {
            id: string;
            tokenPrice: string;
            blockNumber: number;
            timestamp: string;
            trancheId: string;
            tranche: {
                poolId: string;
                trancheId: string;
                pool: {
                    currency: {
                        decimals: number;
                        symbol: string;
                    };
                };
            };
            tokenSupply: string;
            sumOutstandingInvestOrdersByPeriod: string;
            sumOutstandingRedeemOrdersByPeriod: string;
            sumFulfilledInvestOrdersByPeriod: string;
            sumFulfilledRedeemOrdersByPeriod: string;
            yield7DaysAnnualized: string;
            yield30DaysAnnualized: string;
            yield90DaysAnnualized: string;
            yieldSinceInception: string;
            yieldMTD: string;
            yieldQTD: string;
            yieldYTD: string;
            yieldSinceLastPeriod: string;
        }[];
    };
};
export type TrancheSnapshot = {
    id: string;
    price: Price;
    timestamp: string;
    trancheId: string;
    poolId: string;
    tokenSupply: Balance;
    pool: {
        currency: {
            decimals: number;
            symbol: string;
        };
    };
    outstandingInvestOrders: Balance;
    outstandingRedeemOrders: Balance;
    fulfilledInvestOrders: Balance;
    fulfilledRedeemOrders: Balance;
    yield7DaysAnnualized: Perquintill | null;
    yield30DaysAnnualized: Perquintill | null;
    yield90DaysAnnualized: Perquintill | null;
    yieldSinceInception: Perquintill;
    yieldMTD: Perquintill | null;
    yieldQTD: Perquintill | null;
    yieldYTD: Perquintill | null;
    yieldSinceLastPeriod: Perquintill | null;
};
export type TrancheSnapshotsByDate = {
    [timestamp: string]: TrancheSnapshot[];
};
export declare function trancheSnapshotsPostProcess(data: SubqueryTrancheSnapshot): {
    [date: string]: TrancheSnapshot[];
};
//# sourceMappingURL=trancheSnapshots.d.ts.map