import { Centrifuge } from '../../Centrifuge.js';
import { Entity } from '../Entity.js';
import { Pool } from '../Pool.js';
import { AssetSnapshotFilter } from './assetSnapshots.js';
import { AssetTransactionFilter } from './assetTransactions.js';
import { EpochFilter } from './epochs.js';
import { InvestorTransactionFilter } from './investorTransactions.js';
import { PoolFeeSnapshotFilter } from './poolFeeSnapshots.js';
import { PoolFeeTransactionFilter } from './poolFeeTransactions.js';
import { PoolSnapshotFilter } from './poolSnapshots.js';
import { CurrencyBalanceFilter, TrancheBalanceFilter } from './trancheCurrencyBalance.js';
import { TrancheSnapshotFilter } from './trancheSnapshots.js';
export declare class IndexerQueries extends Entity {
    pool: Pool;
    constructor(centrifuge: Centrifuge, pool: Pool);
    poolFeeSnapshotsQuery(filter?: PoolFeeSnapshotFilter): import("../../index.js").Query<import("./poolFeeSnapshots.js").PoolFeeSnapshotsByDate>;
    poolSnapshotsQuery(filter?: PoolSnapshotFilter): import("../../index.js").Query<import("./poolSnapshots.js").PoolSnapshot[]>;
    trancheSnapshotsQuery(filter?: TrancheSnapshotFilter): import("../../index.js").Query<{
        [date: string]: import("./trancheSnapshots.js").TrancheSnapshot[];
    }>;
    poolEpochsQuery(filter?: EpochFilter): import("../../index.js").Query<import("./epochs.js").Epoch[]>;
    investorTransactionsQuery(filter?: InvestorTransactionFilter): import("../../index.js").Query<import("./investorTransactions.js").InvestorTransaction[]>;
    assetTransactionsQuery(filter?: AssetTransactionFilter): import("../../index.js").Query<import("./assetTransactions.js").AssetTransaction[]>;
    poolFeeTransactionsQuery(filter?: PoolFeeTransactionFilter): import("../../index.js").Query<import("./poolFeeTransactions.js").PoolFeeTransaction[]>;
    assetSnapshotsQuery(filter?: AssetSnapshotFilter): import("../../index.js").Query<import("./assetSnapshots.js").AssetSnapshot[]>;
    trancheCurrencyBalanceQuery(filterTranches?: TrancheBalanceFilter, filterCurrencies?: CurrencyBalanceFilter): import("../../index.js").Query<{
        accountId: string;
        chainId: number | "centrifuge";
        trancheId: string;
        evmAddress: string | undefined;
        balance: import("../../index.js").Balance;
        pendingInvestCurrency: import("../../index.js").Balance;
        claimableTrancheTokens: import("../../index.js").Balance;
        sumClaimedTrancheTokens: import("../../index.js").Balance;
        pendingRedeemTrancheTokens: import("../../index.js").Balance;
        claimableCurrency: import("../../index.js").Balance;
        sumClaimedCurrency: import("../../index.js").Balance;
    }[]>;
}
//# sourceMappingURL=index.d.ts.map