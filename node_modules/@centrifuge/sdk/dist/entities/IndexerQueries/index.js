import { Entity } from '../Entity.js';
import { assetSnapshotsPostProcess, assetSnapshotsQuery } from './assetSnapshots.js';
import { assetTransactionsPostProcess, assetTransactionsQuery } from './assetTransactions.js';
import { epochsPostProcess, epochsQuery } from './epochs.js';
import { investorTransactionsPostProcess, investorTransactionsQuery, } from './investorTransactions.js';
import { poolFeeSnapshotQuery, poolFeeSnapshotsPostProcess } from './poolFeeSnapshots.js';
import { poolFeeTransactionPostProcess, poolFeeTransactionQuery, } from './poolFeeTransactions.js';
import { poolSnapshotsPostProcess, poolSnapshotsQuery } from './poolSnapshots.js';
import { trancheCurrencyBalancePostProcessor, trancheCurrencyBalanceQuery, } from './trancheCurrencyBalance.js';
import { trancheSnapshotsPostProcess, trancheSnapshotsQuery } from './trancheSnapshots.js';
export class IndexerQueries extends Entity {
    pool;
    constructor(centrifuge, pool) {
        super(centrifuge, ['indexerQueries', pool.id.toString()]);
        this.pool = pool;
    }
    poolFeeSnapshotsQuery(filter) {
        return this._root._queryIndexer(poolFeeSnapshotQuery, { filter }, poolFeeSnapshotsPostProcess);
    }
    poolSnapshotsQuery(filter) {
        return this._root._queryIndexer(poolSnapshotsQuery, { filter }, poolSnapshotsPostProcess);
    }
    trancheSnapshotsQuery(filter) {
        return this._root._queryIndexer(trancheSnapshotsQuery, { filter }, trancheSnapshotsPostProcess);
    }
    poolEpochsQuery(filter) {
        return this._root._queryIndexer(epochsQuery, { filter }, epochsPostProcess);
    }
    investorTransactionsQuery(filter) {
        return this._root._queryIndexer(investorTransactionsQuery, { filter }, investorTransactionsPostProcess);
    }
    assetTransactionsQuery(filter) {
        return this._root._queryIndexer(assetTransactionsQuery, { filter }, assetTransactionsPostProcess);
    }
    poolFeeTransactionsQuery(filter) {
        return this._root._queryIndexer(poolFeeTransactionQuery, { filter }, poolFeeTransactionPostProcess);
    }
    assetSnapshotsQuery(filter) {
        return this._root._queryIndexer(assetSnapshotsQuery, { filter }, assetSnapshotsPostProcess);
    }
    trancheCurrencyBalanceQuery(filterTranches, filterCurrencies) {
        return this._root._queryIndexer(trancheCurrencyBalanceQuery, { filterTranches, filterCurrencies }, trancheCurrencyBalancePostProcessor);
    }
}
//# sourceMappingURL=index.js.map