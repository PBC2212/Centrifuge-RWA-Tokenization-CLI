import { Query } from '../../types/query.js';
import { AssetListReport, AssetListReportFilter, AssetTimeSeriesReport, AssetTimeSeriesReportFilter, AssetTransactionReport, AssetTransactionReportFilter, BalanceSheetReport, CashflowReport, DataReport, DataReportFilter, FeeTransactionReport, FeeTransactionReportFilter, InvestorListReport, InvestorListReportFilter, InvestorTransactionsReport, InvestorTransactionsReportFilter, OrdersListReport, OrdersListReportFilter, ProfitAndLossReport, ReportFilter, TokenPriceReport, TokenPriceReportFilter } from '../../types/reports.js';
import { Entity } from '../Entity.js';
import { Pool } from '../Pool.js';
export declare class Reports extends Entity {
    pool: Pool;
    private queries;
    balanceSheet(filter?: ReportFilter): Query<BalanceSheetReport[]>;
    cashflow(filter?: ReportFilter): Query<CashflowReport[]>;
    profitAndLoss(filter?: ReportFilter): Query<ProfitAndLossReport[]>;
    investorTransactions(filter?: InvestorTransactionsReportFilter): Query<InvestorTransactionsReport[]>;
    assetTransactions(filter?: AssetTransactionReportFilter): Query<AssetTransactionReport[]>;
    tokenPrice(filter?: TokenPriceReportFilter): Query<TokenPriceReport[]>;
    feeTransactions(filter?: FeeTransactionReportFilter): Query<FeeTransactionReport[]>;
    assetList(filter?: AssetListReportFilter): Query<AssetListReport[]>;
    investorList(filter?: InvestorListReportFilter): Query<InvestorListReport[]>;
    ordersList(filter?: OrdersListReportFilter): Query<OrdersListReport[]>;
    assetTimeSeries(filter?: AssetTimeSeriesReportFilter): Query<AssetTimeSeriesReport[]>;
    _generateReport<T>(type: DataReport, filter?: DataReportFilter): Query<T[]>;
}
//# sourceMappingURL=index.d.ts.map